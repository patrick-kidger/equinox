[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {email = "contact@kidger.site", name = "Patrick Kidger"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Mathematics"
]
dependencies = ["jax>=0.4.38,!=0.7.0,!=0.7.1", "jaxtyping>=0.2.20", "typing_extensions>=4.5.0", "wadler_lindig>=0.1.0"]
description = "Elegant easy-to-use neural networks in JAX."
keywords = ["jax", "neural-networks", "deep-learning", "equinox"]
license = {file = "LICENSE"}
name = "equinox"
readme = "README.md"
requires-python = ">=3.10"
urls = {repository = "https://github.com/patrick-kidger/equinox"}
version = "0.13.1"

[project.optional-dependencies]
dev = [
  "pre-commit"
]
docs = [
  "hippogriffe==0.2.1",
  "griffe==1.7.3",
  "mkdocs==1.6.1",
  "mkdocs-include-exclude-files==0.1.0",
  "mkdocs-ipynb==0.1.1",
  "mkdocs-material==9.6.7",
  "mkdocstrings==0.28.3",
  "mkdocstrings-python==1.16.8",
  "pymdown-extensions==10.14.3"
]
tests = [
  "beartype",
  "jaxlib",
  "optax",
  "pytest"
]

[tool.hatch.build]
include = ["equinox/*"]

[tool.pyright]
include = ["equinox", "tests"]
reportFunctionMemberAccess = false
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = false # Incompatible with eqx.AbstractVar

[tool.pytest.ini_options]
addopts = "-Werror --jaxtyping-packages=equinox,beartype.beartype(conf=beartype.BeartypeConf(strategy=beartype.BeartypeStrategy.On))"

[tool.ruff]
extend-include = ["*.ipynb"]
src = []

[tool.ruff.lint]
fixable = ["I001", "F401", "UP"]
ignore = ["E402", "E721", "E731", "E741", "F722"]
select = ["E", "F", "I001", "UP"]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
lines-after-imports = 2
order-by-type = false
